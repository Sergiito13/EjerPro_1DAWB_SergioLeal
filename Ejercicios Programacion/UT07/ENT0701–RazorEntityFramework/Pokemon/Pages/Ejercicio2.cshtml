@page
@model Pokemon.Pages.Ejercicio2Model
@{
}
<div class="container">
    <div class="custom-form">
        <h2>Ingrese una fecha</h2>
            <form method="post" action="">
            @if (Request.Method == "POST")
            {  
                <div class="form-group">
                    <label for="fecha">Fecha:</label>
                    <input type="date" class="form-control" id="fecha" name="fecha" value="@Request.Form["fecha"]" required>
                </div>

                <button type="submit" class="btn btn-primary mt-2">Enviar</button>

                <button type="submit" class="btn btn-primary" name="botonnavegacion" value="anterior"> Anterior</button>
                <button type="submit" class="btn btn-primary" name="botonnavegacion" value="siguiente"> Siguiente</button>
            }else
            {
                <div class="form-group">
                    <label for="fecha">Fecha:</label>
                    <input type="date" class="form-control" id="fecha" name="fecha" required>
                </div>

                <button type="submit" class="btn btn-primary mt-2">Enviar</button>
            }
            </form>
    </div>
        

    @{
        if (Request.Method == "POST")
        {
            DateTime fechaUsu;
            if (DateTime.TryParse(Request.Form["fecha"], out fechaUsu))
            {
                int paginaactual = 1;
                int numeroEventos = 3;

                if (Request.Form["botonnavegacion"] == "siguiente")
                {
                    paginaactual++;
                }else if (Request.Form["botonnavegacion"] == "anterior")
                {
                    paginaactual--;
                }else
                {
                    List<string> eventos = (from Evento in Model.Datos.Eventos where Evento.Fecha <= fechaUsu select Evento.Nombre).ToList();
                    <input type="hidden" name="registros" value="@eventos">
                    decimal numeroMaximoPaginas = Math.Ceiling(Convert.ToDecimal(eventos.Count) / Convert.ToDecimal(numeroEventos));
                }

                for (int i = paginaactual; i <= paginaactual; i+=numeroEventos)
                {
                    
                }
                

            }
            else
            {
                <div class="alert alert-danger p-4 mt-2"> Error: el dato válido es una fecha </div>
            }

        }
    }
