// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Pokemon.Models
{
    public partial class MisDatos : DbContext
    {
        public MisDatos()
        {
        }

        public MisDatos(DbContextOptions<MisDatos> options)
            : base(options)
        {
        }

        public virtual DbSet<Eventos> Eventos { get; set; }
        public virtual DbSet<Generaciones> Generaciones { get; set; }
        public virtual DbSet<Habilidades> Habilidades { get; set; }
        public virtual DbSet<Movimientos> Movimientos { get; set; }
        public virtual DbSet<Pokemon> Pokemon { get; set; }
        public virtual DbSet<Tipos> Tipos { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Eventos>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha).HasColumnType("date");

                entity.Property(e => e.GeneracionId).HasColumnName("GeneracionID");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Generacion)
                    .WithMany(p => p.Eventos)
                    .HasForeignKey(d => d.GeneracionId)
                    .HasConstraintName("FK_Eventos_Generaciones");
            });

            modelBuilder.Entity<Generaciones>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Habilidades>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Movimientos>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoId).HasColumnName("TipoID");

                entity.HasOne(d => d.Tipo)
                    .WithMany(p => p.Movimientos)
                    .HasForeignKey(d => d.TipoId)
                    .HasConstraintName("FK_Movimientos_Tipos");
            });

            modelBuilder.Entity<Pokemon>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.GeneracionId).HasColumnName("GeneracionID");

                entity.Property(e => e.Habilidad1Id).HasColumnName("Habilidad1ID");

                entity.Property(e => e.Habilidad2Id).HasColumnName("Habilidad2ID");

                entity.Property(e => e.Imagen)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Movimiento1Id).HasColumnName("Movimiento1ID");

                entity.Property(e => e.Movimiento2Id).HasColumnName("Movimiento2ID");

                entity.Property(e => e.Movimiento3Id).HasColumnName("Movimiento3ID");

                entity.Property(e => e.Movimiento4Id).HasColumnName("Movimiento4ID");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo1Id).HasColumnName("Tipo1ID");

                entity.Property(e => e.Tipo2Id).HasColumnName("Tipo2ID");

                entity.HasOne(d => d.Generacion)
                    .WithMany(p => p.Pokemon)
                    .HasForeignKey(d => d.GeneracionId)
                    .HasConstraintName("FK_Pokemon_Generaciones");

                entity.HasOne(d => d.Habilidad1)
                    .WithMany(p => p.PokemonHabilidad1)
                    .HasForeignKey(d => d.Habilidad1Id)
                    .HasConstraintName("FK_Pokemon_Habilidades1");

                entity.HasOne(d => d.Habilidad2)
                    .WithMany(p => p.PokemonHabilidad2)
                    .HasForeignKey(d => d.Habilidad2Id)
                    .HasConstraintName("FK_Pokemon_Habilidades2");

                entity.HasOne(d => d.Movimiento1)
                    .WithMany(p => p.PokemonMovimiento1)
                    .HasForeignKey(d => d.Movimiento1Id)
                    .HasConstraintName("FK_Pokemon_Movimientos1");

                entity.HasOne(d => d.Movimiento2)
                    .WithMany(p => p.PokemonMovimiento2)
                    .HasForeignKey(d => d.Movimiento2Id)
                    .HasConstraintName("FK_Pokemon_Movimientos2");

                entity.HasOne(d => d.Movimiento3)
                    .WithMany(p => p.PokemonMovimiento3)
                    .HasForeignKey(d => d.Movimiento3Id)
                    .HasConstraintName("FK_Pokemon_Movimientos3");

                entity.HasOne(d => d.Movimiento4)
                    .WithMany(p => p.PokemonMovimiento4)
                    .HasForeignKey(d => d.Movimiento4Id)
                    .HasConstraintName("FK_Pokemon_Movimientos4");

                entity.HasOne(d => d.Tipo1)
                    .WithMany(p => p.PokemonTipo1)
                    .HasForeignKey(d => d.Tipo1Id)
                    .HasConstraintName("FK_Pokemon_Tipos1");

                entity.HasOne(d => d.Tipo2)
                    .WithMany(p => p.PokemonTipo2)
                    .HasForeignKey(d => d.Tipo2Id)
                    .HasConstraintName("FK_Pokemon_Tipos2");
            });

            modelBuilder.Entity<Tipos>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}